{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lexxd\\\\my-project\\\\frontend\\\\src\\\\components\\\\ServiceList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    services,\n    loading,\n    error\n  } = useSelector(state => state);\n  useEffect(() => {\n    dispatch({\n      type: 'FETCH_SERVICES_REQUEST'\n    });\n  }, [dispatch]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: 'FETCH_SERVICES_REQUEST'\n      }),\n      children: \"Retry\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${service.id}/details`,\n          children: service.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)\n      }, service.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceList, \"UybcFcxZhHp6rizs1G1RfcQFpK4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ServiceList;\nexport default ServiceList;\nvar _c;\n$RefreshReg$(_c, \"ServiceList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Link","jsxDEV","_jsxDEV","ServiceList","_s","dispatch","services","loading","error","state","type","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","service","to","id","name","_c","$RefreshReg$"],"sources":["C:/Users/lexxd/my-project/frontend/src/components/ServiceList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ServiceList = () => {\r\n  const dispatch = useDispatch();\r\n  const { services, loading, error } = useSelector(state => state);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: 'FETCH_SERVICES_REQUEST' });\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error} <button onClick={() => dispatch({ type: 'FETCH_SERVICES_REQUEST' })}>Retry</button></div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Services</h1>\r\n      <ul>\r\n        {services.map(service => (\r\n          <li key={service.id}>\r\n            <Link to={`/${service.id}/details`}>{service.name}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServiceList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,QAAQ;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAAC;EAEhEZ,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAAC;MAAEK,IAAI,EAAE;IAAyB,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAIE,OAAO,EAAE,oBAAOL,OAAA;IAAAS,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACzC,IAAIP,KAAK,EAAE,oBAAON,OAAA;IAAAS,QAAA,GAAK,SAAO,EAACH,KAAK,EAAC,GAAC,eAAAN,OAAA;MAAQc,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAAC;QAAEK,IAAI,EAAE;MAAyB,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAE/H,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBb,OAAA;MAAAS,QAAA,EACGL,QAAQ,CAACW,GAAG,CAACC,OAAO,iBACnBhB,OAAA;QAAAS,QAAA,eACET,OAAA,CAACF,IAAI;UAACmB,EAAE,EAAE,IAAID,OAAO,CAACE,EAAE,UAAW;UAAAT,QAAA,EAAEO,OAAO,CAACG;QAAI;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GADlDG,OAAO,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACX,EAAA,CAvBID,WAAW;EAAA,QACEL,WAAW,EACSC,WAAW;AAAA;AAAAuB,EAAA,GAF5CnB,WAAW;AAyBjB,eAAeA,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}