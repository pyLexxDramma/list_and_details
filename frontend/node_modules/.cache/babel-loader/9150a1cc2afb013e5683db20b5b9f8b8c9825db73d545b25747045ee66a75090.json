{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lexxd\\\\my-project\\\\frontend\\\\src\\\\components\\\\ServiceList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServiceList = () => {\n  _s();\n  const [services, setServices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchServices = async () => {\n    try {\n      const response = await axios.get('http://localhost:7070/api/services');\n      setServices(response.data);\n    } catch (error) {\n      setError('Ошибка при загрузке услуг');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchServices();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.loading,\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.error,\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    style: styles.list,\n    children: services.map(service => /*#__PURE__*/_jsxDEV(\"li\", {\n      style: styles.listItem,\n      children: service.name\n    }, service.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ServiceList, \"l7D1/i509iW4jLhBJLLaY6cVuzw=\");\n_c = ServiceList;\nconst styles = {\n  loading: {\n    textAlign: 'center',\n    fontSize: '20px',\n    color: '#007BFF'\n  },\n  error: {\n    textAlign: 'center',\n    fontSize: '20px',\n    color: 'red'\n  },\n  list: {\n    listStyle: 'none',\n    padding: 0,\n    margin: '20px'\n  },\n  listItem: {\n    padding: '10px',\n    margin: '10px 0',\n    backgroundColor: '#f8f9fa',\n    border: '1px solid #dee2e6',\n    borderRadius: '5px',\n    transition: 'background-color 0.3s'\n  }\n};\nexport default ServiceList;\nvar _c;\n$RefreshReg$(_c, \"ServiceList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ServiceList","_s","services","setServices","loading","setLoading","error","setError","fetchServices","response","get","data","style","styles","children","fileName","_jsxFileName","lineNumber","columnNumber","list","map","service","listItem","name","id","_c","textAlign","fontSize","color","listStyle","padding","margin","backgroundColor","border","borderRadius","transition","$RefreshReg$"],"sources":["C:/Users/lexxd/my-project/frontend/src/components/ServiceList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ServiceList = () => {\r\n  const [services, setServices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchServices = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:7070/api/services');\r\n      setServices(response.data);\r\n    } catch (error) {\r\n      setError('Ошибка при загрузке услуг');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchServices();\r\n  }, []);\r\n\r\n  if (loading) return <div style={styles.loading}>Загрузка...</div>;\r\n  if (error) return <div style={styles.error}>{error}</div>;\r\n\r\n  return (\r\n    <ul style={styles.list}>\r\n      {services.map(service => (\r\n        <li key={service.id} style={styles.listItem}>\r\n          {service.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  loading: {\r\n    textAlign: 'center',\r\n    fontSize: '20px',\r\n    color: '#007BFF',\r\n  },\r\n  error: {\r\n    textAlign: 'center',\r\n    fontSize: '20px',\r\n    color: 'red',\r\n  },\r\n  list: {\r\n    listStyle: 'none',\r\n    padding: 0,\r\n    margin: '20px',\r\n  },\r\n  listItem: {\r\n    padding: '10px',\r\n    margin: '10px 0',\r\n    backgroundColor: '#f8f9fa',\r\n    border: '1px solid #dee2e6',\r\n    borderRadius: '5px',\r\n    transition: 'background-color 0.3s',\r\n  },\r\n};\r\n\r\nexport default ServiceList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,oCAAoC,CAAC;MACtEP,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACda,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAKa,KAAK,EAAEC,MAAM,CAACT,OAAQ;IAAAU,QAAA,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EACjE,IAAIZ,KAAK,EAAE,oBAAOP,OAAA;IAAKa,KAAK,EAAEC,MAAM,CAACP,KAAM;IAAAQ,QAAA,EAAER;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAEzD,oBACEnB,OAAA;IAAIa,KAAK,EAAEC,MAAM,CAACM,IAAK;IAAAL,QAAA,EACpBZ,QAAQ,CAACkB,GAAG,CAACC,OAAO,iBACnBtB,OAAA;MAAqBa,KAAK,EAAEC,MAAM,CAACS,QAAS;MAAAR,QAAA,EACzCO,OAAO,CAACE;IAAI,GADNF,OAAO,CAACG,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEf,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACjB,EAAA,CAhCID,WAAW;AAAAyB,EAAA,GAAXzB,WAAW;AAkCjB,MAAMa,MAAM,GAAG;EACbT,OAAO,EAAE;IACPsB,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE;EACT,CAAC;EACDtB,KAAK,EAAE;IACLoB,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE,MAAM;IAChBC,KAAK,EAAE;EACT,CAAC;EACDT,IAAI,EAAE;IACJU,SAAS,EAAE,MAAM;IACjBC,OAAO,EAAE,CAAC;IACVC,MAAM,EAAE;EACV,CAAC;EACDT,QAAQ,EAAE;IACRQ,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,QAAQ;IAChBC,eAAe,EAAE,SAAS;IAC1BC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,KAAK;IACnBC,UAAU,EAAE;EACd;AACF,CAAC;AAED,eAAenC,WAAW;AAAC,IAAAyB,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}