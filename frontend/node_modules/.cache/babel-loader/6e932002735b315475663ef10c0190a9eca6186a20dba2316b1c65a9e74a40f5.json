{"ast":null,"code":"import { takeEvery, call, put, all } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// Функция для получения услуг\nfunction* fetchServices() {\n  try {\n    const response = yield call(axios.get, 'http://localhost:7070/api/services');\n    yield put({\n      type: 'FETCH_SERVICES_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: 'FETCH_SERVICES_FAILURE',\n      payload: error.message\n    });\n  }\n}\n\n// Функция для получения деталей услуги\nfunction* fetchServiceDetails(action) {\n  try {\n    const response = yield call(axios.get, `http://localhost:7070/api/services/${action.payload}`);\n    yield put({\n      type: 'FETCH_SERVICE_DETAILS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    yield put({\n      type: 'FETCH_SERVICE_DETAILS_FAILURE',\n      payload: error.message\n    });\n  }\n}\n\n// Слушатель для действий\nfunction* watchFetchServices() {\n  yield takeEvery('FETCH_SERVICES_REQUEST', fetchServices);\n}\nfunction* watchFetchServiceDetails() {\n  yield takeEvery('FETCH_SERVICE_DETAILS_REQUEST', fetchServiceDetails);\n}\n\n// Корневая сага\nexport default function* rootSaga() {\n  yield all([watchFetchServices(), watchFetchServiceDetails()]);\n}","map":{"version":3,"names":["takeEvery","call","put","all","axios","fetchServices","response","get","type","payload","data","error","message","fetchServiceDetails","action","watchFetchServices","watchFetchServiceDetails","rootSaga"],"sources":["C:/Users/lexxd/my-project/frontend/src/sagas/index.js"],"sourcesContent":["import { takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\n// Функция для получения услуг\r\nfunction* fetchServices() {\r\n    try {\r\n        const response = yield call(axios.get, 'http://localhost:7070/api/services');\r\n        yield put({ type: 'FETCH_SERVICES_SUCCESS', payload: response.data });\r\n    } catch (error) {\r\n        yield put({ type: 'FETCH_SERVICES_FAILURE', payload: error.message });\r\n    }\r\n}\r\n\r\n// Функция для получения деталей услуги\r\nfunction* fetchServiceDetails(action) {\r\n    try {\r\n        const response = yield call(axios.get, `http://localhost:7070/api/services/${action.payload}`);\r\n        yield put({ type: 'FETCH_SERVICE_DETAILS_SUCCESS', payload: response.data });\r\n    } catch (error) {\r\n        yield put({ type: 'FETCH_SERVICE_DETAILS_FAILURE', payload: error.message });\r\n    }\r\n}\r\n\r\n// Слушатель для действий\r\nfunction* watchFetchServices() {\r\n    yield takeEvery('FETCH_SERVICES_REQUEST', fetchServices);\r\n}\r\n\r\nfunction* watchFetchServiceDetails() {\r\n    yield takeEvery('FETCH_SERVICE_DETAILS_REQUEST', fetchServiceDetails);\r\n}\r\n\r\n// Корневая сага\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        watchFetchServices(),\r\n        watchFetchServiceDetails(),\r\n    ]);\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,QAAQ,oBAAoB;AAC9D,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,UAAUC,aAAaA,CAAA,EAAG;EACtB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,IAAI,CAACG,KAAK,CAACG,GAAG,EAAE,oCAAoC,CAAC;IAC5E,MAAML,GAAG,CAAC;MAAEM,IAAI,EAAE,wBAAwB;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EACzE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMT,GAAG,CAAC;MAAEM,IAAI,EAAE,wBAAwB;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EACzE;AACJ;;AAEA;AACA,UAAUC,mBAAmBA,CAACC,MAAM,EAAE;EAClC,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,IAAI,CAACG,KAAK,CAACG,GAAG,EAAE,sCAAsCO,MAAM,CAACL,OAAO,EAAE,CAAC;IAC9F,MAAMP,GAAG,CAAC;MAAEM,IAAI,EAAE,+BAA+B;MAAEC,OAAO,EAAEH,QAAQ,CAACI;IAAK,CAAC,CAAC;EAChF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMT,GAAG,CAAC;MAAEM,IAAI,EAAE,+BAA+B;MAAEC,OAAO,EAAEE,KAAK,CAACC;IAAQ,CAAC,CAAC;EAChF;AACJ;;AAEA;AACA,UAAUG,kBAAkBA,CAAA,EAAG;EAC3B,MAAMf,SAAS,CAAC,wBAAwB,EAAEK,aAAa,CAAC;AAC5D;AAEA,UAAUW,wBAAwBA,CAAA,EAAG;EACjC,MAAMhB,SAAS,CAAC,+BAA+B,EAAEa,mBAAmB,CAAC;AACzE;;AAEA;AACA,eAAe,UAAUI,QAAQA,CAAA,EAAG;EAChC,MAAMd,GAAG,CAAC,CACNY,kBAAkB,CAAC,CAAC,EACpBC,wBAAwB,CAAC,CAAC,CAC7B,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}